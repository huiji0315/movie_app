{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRAiCeA,MA7Bf,YAA0D,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC7C,OACE,sBAAKC,UAAU,QAAf,UACI,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,cAAf,UACI,oBAAIA,UAAU,eAAd,SAA8BJ,IAC9B,oBAAII,UAAU,cAAd,SAA6BL,IAC7B,oBAAIK,UAAU,gBAAd,SACOD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACR,oBAAgBL,UAAU,gBAA1B,SAA2CI,GAAlCC,QAEnB,oBAAGL,UAAU,iBAAb,UAA+BH,EAAQS,MAAM,EAAG,KAAhD,gBCyCGC,G,kNAlDbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAEVC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IAAI,4DALV,gBAGEJ,EAHF,EAERK,KACEA,KAAQL,OAGZ,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IANzB,2C,uDAQZ,WACEQ,KAAKN,c,oBAOP,WACE,MAA8BM,KAAKT,MAA3BC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,OACnB,OACE,yBAASV,UAAU,YAAnB,SACGS,EACC,qBAAKT,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,0BAGF,qBAAKA,UAAU,SAAf,SACGU,EAAOP,KAAI,SAAAe,GAAK,OACf,cAAC,EAAD,CAEEC,GAAID,EAAMC,GACVxB,KAAMuB,EAAMvB,KACZC,MAAOsB,EAAMtB,MACbC,QAASqB,EAAMrB,QACfC,OAAQoB,EAAME,mBACdrB,OAAQmB,EAAMnB,QANTmB,EAAMC,e,GAjCTE,IAAMC,YCDxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.709f80ea.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Movie.css';\r\n\r\nfunction Movie({ year, title, summary, poster, genres }) {\r\n  return (\r\n    <div className=\"movie\">\r\n        <img src={poster} alt={title} title={title} />\r\n        <div className=\"movie__data\">\r\n            <h3 className=\"movie__title\">{title}</h3>\r\n            <h5 className=\"movie__year\">{year}</h5>\r\n            <ul className=\"movie__genres\">\r\n                  {genres.map((genre, index) => (\r\n                      <li key={index} className=\"genres__genre\">{genre}</li>\r\n                  ))}</ul>\r\n            <p className=\"movie__summary\">{summary.slice(0, 180)}...</p>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n// component가 state가 필요없을 경우에는 이게 class component가 될 필요는 없다.\r\n// map에 있는 각각의 item은 key가 필요하다. but, id가 없어서 key로 지정할 수 없다.\r\n// -> map function 자체에서 item과 item number(index) argument를 제공해준다.\r\n\r\nMovie.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n};\r\n\r\nexport default Movie;","import React from 'react';\r\nimport axios from 'axios';\r\nimport Movie from './Movie';\r\nimport './App.css';\r\n\r\nclass App extends React.Component{\r\n  state = {\r\n    isLoading: true,\r\n    movies: []\r\n  };\r\n  getMovies = async () => {\r\n    const {\r\n      data: {\r\n        data: { movies }\r\n      }\r\n    } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\r\n    this.setState({ movies, isLoading: false }); // movies(state): movies(axios).data.data.movies -> es6 문법\r\n  } // YTS API\r\n  componentDidMount() {\r\n    this.getMovies();\r\n  } // render 함수 호출 후 componentDidMount 함수 호출(Component Life Cycle)\r\n  // axios는 마치 fetch 위에 있는 작은 layer\r\n  // javascript에게 getMovie function에 시간이 조금 필요하다고 알려주어야 한다.\r\n  // -> async와 await을 이용해서 느린 axios를 기다리도록 한다.\r\n  // npm i axios -> axios 사용을 위해 설치\r\n\r\n  render() {\r\n    const { isLoading, movies } = this.state;\r\n    return (\r\n      <section className=\"container\">\r\n        {isLoading ? (\r\n          <div className=\"loader\">\r\n            <span className=\"loader__text\">Loading...</span>\r\n          </div>\r\n        ) : (\r\n          <div className=\"movies\">\r\n            {movies.map(movie => (\r\n              <Movie\r\n                key={movie.id}\r\n                id={movie.id}\r\n                year={movie.year}\r\n                title={movie.title}\r\n                summary={movie.summary}\r\n                poster={movie.medium_cover_image}\r\n                genres={movie.genres}\r\n              />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </section>\r\n    );\r\n  } // javascript class 안에 있으면 component class에 의해 react가 혼란스러워하기 때문에 class가 아닌 className으로 기술해주어야 한다.\r\n}\r\n// object을 풀어줄 때 map 함수를 사용하고, jsx에서는 props를 통해 값을 전달한다.\r\n// key props는 표현되지는 않지만 필수 props이다.\r\n\r\nexport default App;\r\n// npm i gh-pages : github의 github page 도메인에 웹사이트를 나타내주도록 함\r\n// -> \"https://huiji0315.github.io/movie_app/\" : homepage를 package.jso에 추가해주기","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// <App />이 component의 형태다.\n// react는 component를 사용해서 HTML처럼 작성하려는 경우에 필요하다.\n// javascript와 HTML 사이의 이런 조합을 jsx라고 부른다.\n\n// react application은 하나의 component만(App)을 rendering 해야한다."],"sourceRoot":""}